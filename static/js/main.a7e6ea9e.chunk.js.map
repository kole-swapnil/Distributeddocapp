{"version":3,"sources":["getWeb3.js","Components/HeaderComponent.js","Components/HomeComponent.js","Components/DoctorComponent.js","Components/PatientComponent.js","Components/FooterComponent.js","Components/TreatmentComponent.js","Components/AllDocsComponent.js","Components/AllTreatment.js","Components/getPatientComponent.js","Components/SharedComponent.js","Components/SharedStudyComp.js","Components/StudyListComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Header","props","state","isNavOpen","togglenav","bind","this","setState","Fragment","className","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","Collapse","isOpen","navbar","Nav","NavItem","to","accounts","Component","Home","auth","DoctorComp","name","age","speciality","handleSubmit","handleInputChange","event","target","value","JSON","stringify","preventDefault","contract","methods","calldoctor","send","from","gas","Form","onSubmit","FormGroup","row","Label","htmlFor","md","Col","Input","type","id","placeholder","onChange","size","offset","Button","color","PatientComp","pataccount","allergies","weight","height","gender","bloodtype","location","callpatient","res","Footer","style","bottom","TreatmentComp","symptoms","medications","treatcount","procedure","description","prescription","treatId","patstate","docaccount","handleSubmitadd","handleSubmitmod","handleSubmitsenddoc","addTreatment","treatmentCount","call","setDoc","patientstate","dotreatment","resi","alldocs","Alldocsrender","dish","yz","zyq","docadd","Card","CardBody","CardTitle","CardText","AllDocsComponent","docCount","doccount","response","i","docsId","rex","push","j","length","docs","xt","z","Menu","map","x","key","Allpatrender","day","moment","unix","dateofComp","xy","time","Date","format","treatment_id","doctor_add","patient_add","AllTreatmentComponent","getshared_treatment","c","treat","GetPatient","patient_state","treatmentsgone","pat","gettreatgone","mst","arr","ms","concat","st","Iframe","dangerouslySetInnerHTML","__html","iframe","SharedComp","StudyDetail","params","split","handleClick","handleAdd","addStudy","replace","share","newid","sendstudy","study_id","qty","isModalOpen","isModalOpen1","toggleModal1","patname","study_ohifid","instance_id","studydate","y","url","Modal","marginTop","ModalHeader","toggle","ModalBody","StudyListComponent","getshared_doc","studies","Main","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","MedicoContract","networks","instance","Contract","abi","address","alert","error","authhandler","vt","storageValue","path","component","AllTreatment","match","dishId","App","basename","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7e6ea9e.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n \r\nimport '../App.css'\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { isNavOpen : false }\r\n        this.togglenav = this.togglenav.bind(this);\r\n    }\r\n\r\n    togglenav(){\r\n        this.setState({isNavOpen : !this.state.isNavOpen});\r\n    }\r\n\r\n    render(){\r\n        // if(!this.props.auth){\r\n        //     return(<React.Fragment></React.Fragment>);\r\n        // }\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"navi\">\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.togglenav}/>\r\n                        <NavbarBrand className=\"mr-auto\" >DAPP EMR</NavbarBrand>\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/doctor\">Register</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/treatment\">Treatment</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/docs\">Doctors</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/patient\">Patient</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/treat\">All Treatment</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/patdata\">Patient Data</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/shared\">Study List</NavLink>\r\n                            </NavItem>\r\n\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/sharedcomp\">Shared</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                       \r\n                    </div>\r\n                    <p className =\"text-white\" ><small>{this.props.accounts}</small></p>\r\n                </Navbar>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { BrowserRouter, NavLink, Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nlet addr;\r\n\r\n\r\n\r\nfunction Home(props){\r\n    var y = props.auth;\r\n    async function handleSubmit(event){\r\n        event.preventDefault();  \r\n        if(addr == ''){\r\n            props.authhandler(false);\r\n        }\r\n        if(props.accounts[0] == addr){\r\n            props.authhandler(true);\r\n            addr = '';\r\n        }\r\n        \r\n        \r\n        console.log(props.accounts[0]);\r\n        \r\n    }\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        <i className=\"fa fa-user-md fa-5x\"></i>\r\n        \r\n       \r\n           <h2>Welcome to Distributed Doc</h2>\r\n      \r\n             <br/>\r\n             <br/>        \r\n\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { render } from 'react-dom';\r\n\r\nclass DoctorComp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={name : '', age : 0, speciality : ''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    \r\n    }\r\n\r\n  //  contract = this.props.contract;\r\n  //  accounts = this.props.accounts; \r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    async handleSubmit(event){\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n        \r\n        const req = await this.props.contract.methods.calldoctor(this.state.age,this.state.name,this.state.speciality).send({from: this.props.accounts[0],gas : 1000000});\r\n        \r\n        // console.log(res);\r\n        \r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n                \r\n                    <h2>Register Doctor</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"name\" md={2}>Doctor Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" value={this.state.name} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"age\" md={2}>Age</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"age\" name=\"age\" placeholder=\"Age\" value={this.state.age} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"speciality\" md={2}>Specilaity</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"speciality\" name=\"speciality\" placeholder=\"Speciality\" value={this.state.speciality} onChange={this.handleInputChange} />    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\" >\r\n                                        Add Doctor\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                            </FormGroup>\r\n                        </Form>\r\n                     \r\n                </div>\r\n       \r\n        )\r\n        }        \r\n}\r\n\r\nexport default DoctorComp;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { render } from 'react-dom';\r\n\r\nclass PatientComp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={pataccount : '',\r\n                    allergies : '', \r\n                    weight : '', \r\n                    height : '', \r\n                    gender : '', \r\n                    bloodtype : '',\r\n                    age : '',\r\n                    location : ''\r\n\r\n                };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    \r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n        const res = await this.props.contract.methods.callpatient(this.state.pataccount,this.state.allergies,this.state.weight,this.state.height,this.state.gender,this.state.age,this.state.bloodtype,this.state.location).send({from: this.props.accounts[0],gas : 1000000});\r\n        console.log(res);\r\n    \r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n                    <h2>Add Patient</h2>\r\n                \r\n                <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"pataccount\" md={2}>Patient Account</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"pataccount\" name=\"pataccount\" placeholder=\"Patient Account Address\" value={this.state.pataccount} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"allergies\" md={2}>Allergies</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"allergies\" name=\"allergies\" placeholder=\"Allergies\" value={this.state.allergies} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"weight\" md={2}>Weight</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"weight\" name=\"weight\" placeholder=\"Weight\" value={this.state.weight} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"height\" md={2}>Height</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"height\" name=\"height\" placeholder=\"Height\" value={this.state.height} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"gender\" md={2}>Gender</Label>\r\n                                <Col md={4}>\r\n                                    <Input type=\"select\" name=\"gender\" value={this.state.gender} onChange={this.handleInputChange}>\r\n                                    <option>Choose</option>\r\n                                    <option>Male</option>\r\n                                    <option>Female</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"bloodtype\" md={2}>Blood Type</Label>\r\n                                <Col md={4}>\r\n                                    <Input type=\"select\" name=\"bloodtype\" value={this.state.bloodtype} onChange={this.handleInputChange}>\r\n                                    <option>Choose</option>\r\n                                    <option>A</option>\r\n                                    <option>B</option>\r\n                                    <option>AB</option>\r\n                                    <option>O</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"age\" md={2}>Age</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"age\" name=\"age\" placeholder=\"Age\" value={this.state.age} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"location\" md={2}>Location</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"location\" name=\"location\" placeholder=\"Location\" value={this.state.location} onChange={this.handleInputChange} />    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add Patient\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                </div>\r\n       \r\n        )\r\n        }        \r\n}\r\n\r\nexport default PatientComp;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\" style={{bottom:0}}>\r\n            \r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright @2020 Atiya Abdalwahab </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { render } from 'react-dom';\r\n\r\nclass TreatmentComp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={pataccount : '', \r\n                    symptoms : '', \r\n                    medications : '',\r\n                    treatcount : 0,\r\n                    procedure : '',\r\n                    description : '',\r\n                    prescription : '',\r\n                    treatId : 0,\r\n                    patstate : 'Active',\r\n                    docaccount : ''\r\n                };\r\n        this.handleSubmitadd = this.handleSubmitadd.bind(this);\r\n        this.handleSubmitmod = this.handleSubmitmod.bind(this);\r\n        this.handleSubmitsenddoc = this.handleSubmitsenddoc.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    \r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    async handleSubmitadd(event){\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n        const res = await this.props.contract.methods.addTreatment(this.state.pataccount,this.state.symptoms,this.state.medications).send({from: this.props.accounts[0],gas : 1000000});\r\n         const treatcount = await this.props.contract.methods.treatmentCount().call();\r\n        this.setState({\r\n             treatcount : treatcount\r\n         })\r\n         console.log(this.state.treatcount);\r\n\r\n        \r\n    }\r\n    async handleSubmitsenddoc(event){\r\n        event.preventDefault();\r\n     \r\n\r\n        const res = await this.props.contract.methods.setDoc(this.state.treatId,this.state.docaccount).send({from: this.props.accounts[0],gas : 1000000});\r\n        console.log(res);\r\n        }\r\n\r\n    async handleSubmitmod(event){\r\n        event.preventDefault();\r\n        var patientstate = 0;\r\n        if(this.state.patstate == 'Recovered'){\r\n            patientstate = 1;\r\n        }\r\n        else if(this.state.patstate == 'Deceased'){\r\n            patientstate = 2;\r\n        }\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        let resi = await this.props.contract.methods.dotreatment(this.state.treatId,this.state.procedure,this.state.description,this.state.prescription,patientstate).send({from: this.props.accounts[0],gas : 1000000});\r\n        console.log(resi);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n                    <h2>Add Treatment</h2>\r\n                \r\n                <Form onSubmit={this.handleSubmitadd}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"pataccount\" md={2}>Patient Account</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"pataccount\" name=\"pataccount\" placeholder=\"Patient Account Address\" value={this.state.pataccount} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"symptoms\" md={2}>Symptoms</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"symptoms\" name=\"symptoms\" placeholder=\"Symptoms\" value={this.state.symptoms} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"medications\" md={2}>Medications</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"medications\" name=\"medications\" placeholder=\"Medications\" value={this.state.medications} onChange={this.handleInputChange} />    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:8}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add Treatment\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col md={{size:2}}>\r\n                                <Button color=\"success\">{this.state.treatcount}</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            \r\n                        </Form>\r\n                        <br/>\r\n                        <br/>\r\n                        <h2>Do Treatment</h2>\r\n                        <Form onSubmit={this.handleSubmitmod}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"treatId\" md={2}>Treatment Id</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"treatId\" name=\"treatId\" placeholder=\"Treatment Id\" value={this.state.treatId} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"patstate\" md={2}>Patient State</Label>\r\n                                <Col md={4}>\r\n                                    <Input type=\"select\" name=\"patstate\" value={this.state.patstate} onChange={this.handleInputChange}>\r\n                                    <option>Choose</option>\r\n                                    <option>Active</option>\r\n                                    <option>Recovered</option>\r\n                                    <option>Deceased</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"procedure\" md={2}>Procedure</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"procedure\" name=\"procedure\" placeholder=\"Procedure\" value={this.state.procedure} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"description\" name=\"description\" placeholder=\"Description\" value={this.state.description} onChange={this.handleInputChange} />    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"prescription\" md={2}>Prescription</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"prescription\" name=\"prescription\" placeholder=\"Prescription\" value={this.state.prescription} onChange={this.handleInputChange} />    \r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Do Treatment\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                        <br/>\r\n                        <br/>\r\n                        <h2>Send Treatment</h2>\r\n                        <Form onSubmit={this.handleSubmitsenddoc}>\r\n                        <FormGroup row>\r\n                                <Label htmlFor=\"treatId\" md={2}>Treatment Id</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"treatId\" name=\"treatId\" placeholder=\"Treatment Id\" value={this.state.treatId} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"docaccount\" md={2}>Doctor Account</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"docaccount\" name=\"docaccount\" placeholder=\"Doctor Account Address\" value={this.state.docaccount} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Treatment\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                            </FormGroup>\r\n\r\n                            \r\n                        </Form>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                </div>\r\n       \r\n        )\r\n        }        \r\n}\r\n\r\nexport default TreatmentComp;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n\r\nimport { render } from 'react-dom';\r\nvar mst;\r\nvar alldocs = [];\r\nfunction Alldocsrender({dish,zyq}){\r\n    var yz = zyq[0] == dish.docadd?\"bg-success text-white\":\"\"; \r\n    return(\r\n        <Card className={yz}>\r\n        <i className=\"fa fa-user-md fa-5x\"></i>\r\n        <CardBody>\r\n        <CardTitle>Name : {dish.name}</CardTitle>\r\n        <CardText><small>Account : {dish.docadd}</small></CardText>\r\n          <CardText>\r\n            <small>Speciality : {dish.speciality}</small>\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n    }\r\n\r\nclass AllDocsComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] }\r\n        //this.com = this.com.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        var res = await this.props.contract?.methods.doccount().call();\r\n               \r\n                var response= [];\r\n                for(var i=1;i<=res;i++){\r\n                    var rex = await this.props.contract?.methods.docsId(i).call();\r\n                    response.push(rex);\r\n                }\r\n                console.log(response);\r\n                alldocs = [];\r\n                for(var j=0;j<response.length;j++){\r\n                    var xt = await this.props.contract.methods.docs(response[j]).call();\r\n                    alldocs.push(xt);\r\n                    console.log(j);\r\n                }\r\n                console.log(alldocs);\r\n                this.setState({ dish : alldocs});\r\n         \r\n    }\r\n\r\n     render(){\r\n         var z = this.props.accounts;\r\n        \r\n        const Menu = this.state.dish.map((x) => {\r\n            return (\r\n                <div key={x.docadd} className=\"col-4 col-md-3\">\r\n                    < Alldocsrender dish={x} zyq={z}/>\r\n                </div>\r\n            );\r\n        })\r\n        \r\n        return(\r\n        <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h2>All Doctors</h2>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AllDocsComponent;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n\r\nimport { render } from 'react-dom';\r\nvar mst;\r\nvar alldocs = [];\r\nfunction Allpatrender({dish}){\r\n    var day = moment.unix(dish.dateofComp); \r\n    var xy = dish.dateofComp;\r\n    var date = new Date(xy*1000);\r\n    var time = day.format('dddd MMMM Do YYYY, h:mm:ss a');\r\n    var yz = xy != 0?\"bg-success text-white\":\"\"; \r\n    return(\r\n        <Card className={yz}>\r\n        <i className=\"fa fa-medkit fa-5x\"></i>\r\n        <CardBody>\r\n        <CardTitle>Treatment ID : {dish.treatment_id}</CardTitle>\r\n        <CardText><small>Doctor account : {dish.doctor_add}</small></CardText>\r\n        <CardText><small>Patient account : {dish.patient_add}</small></CardText>\r\n        <CardText><small>Symptoms : {dish.symptoms}</small></CardText>\r\n        <CardText><small>Medications : {dish.medications}</small></CardText>\r\n        <CardText><small>Description : {dish.description}</small></CardText>\r\n        <CardText><small>Prescription : {dish.prescription}</small></CardText>\r\n          <CardText>\r\n            <small >Time completed : {xy == 0?\"Treatment not completed\":time}</small>\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n    }\r\n\r\nclass AllTreatmentComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] }\r\n        //this.com = this.com.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        var res = await this.props.contract?.methods.getshared_treatment(this.props.accounts[0]).call();\r\n               var c = await res?.length;\r\n                var response= [];\r\n                for(var i=0;i<c;i++){\r\n                    var rex = await this.props.contract?.methods.treat(res[i]).call();\r\n                    response.push(rex);\r\n                }\r\n\r\n                this.setState({ dish : response});\r\n         \r\n    }\r\n\r\n     render(){\r\n  \r\n        const Menu = this.state.dish.map((x) => {\r\n            return (\r\n                <div key={x} className=\"col-4 col-md-3\">\r\n                    < Allpatrender dish={x}/>\r\n                </div>\r\n            );\r\n        })\r\n        \r\n        return(\r\n        <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h2>All Treatment</h2>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AllTreatmentComponent;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { render } from 'react-dom';\r\n\r\nclass GetPatient extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pataccount: '',\r\n            allergies: '',\r\n            weight: '',\r\n            height: '',\r\n            gender: '',\r\n            bloodtype: '',\r\n            age: '',\r\n            location: '',\r\n            patient_state: '',\r\n            treatmentsgone: '',\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n\r\n    //  contract = this.props.contract;\r\n    //  accounts = this.props.accounts; \r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n        const res = await this.props.contract.methods.pat(this.state.pataccount).call();\r\n        var mst = await this.props.contract.methods.gettreatgone(this.state.pataccount).call();\r\n        var arr = '';\r\n        mst.map(ms => {\r\n            arr = arr.concat(ms,',')\r\n        })\r\n\r\n        console.log(\"fdsaf\",arr);\r\n        this.setState({\r\n            allergies: res.allergies,\r\n            weight: res.weight,\r\n            height: res.height,\r\n            gender: res.gender,\r\n            bloodtype: res.bloodtype,\r\n            age: res.age,\r\n            location: res.location,\r\n            patient_state: res.patient_state,\r\n            treatmentsgone: arr\r\n\r\n        });\r\n        console.log(\"Current State\" + JSON.stringify(this.state));\r\n        // console.log(res);\r\n\r\n    }\r\n\r\n    render() {\r\n        var st = '';\r\n        if(this.state.patient_state == 0){\r\n            st = 'Active';\r\n        }\r\n        else if(this.state.patient_state == 1){\r\n            st = 'Recovered';\r\n        }\r\n        else if(this.state.patient_state == 2){\r\n            st = 'Deceased';\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n\r\n                <h2>Patient Details</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup row>\r\n                        <Label htmlFor=\"pataccount\" md={2}>Patient Account</Label>\r\n                        <Col md={10}>\r\n                            <Input type=\"text\" id=\"pataccount\" name=\"pataccount\" placeholder=\"Patient Account Address\" value={this.state.pataccount} onChange={this.handleInputChange} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Col md={{ size: 12}}>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Get Data\r\n                                    </Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n                <br />\r\n                <br />\r\n                <h2>Patient Details</h2>\r\n                <Card >\r\n                    <i className=\"fa fa-wheelchair fa-3x\"></i>\r\n                    <CardBody>\r\n                        <CardTitle>Patient account : {this.state.pataccount}</CardTitle>\r\n                        <CardText><small>Height : {this.state.height}</small></CardText>\r\n                        <CardText><small>Weight : {this.state.weight}</small></CardText>\r\n                        <CardText><small>Bloodtype : {this.state.bloodtype}</small></CardText>\r\n                        <CardText><small>Gender : {this.state.gender}</small></CardText>\r\n                        <CardText><small>Allergies : {this.state.allergies}</small></CardText>\r\n                        <CardText><small>Location : {this.state.location}</small></CardText>\r\n                        <CardText><small >State : {st}</small></CardText>\r\n                        <CardText><small >treatments Undergone : {this.state.treatmentsgone}</small></CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                \r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetPatient;","import Frame from 'react-frame-component';\r\nimport React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { render } from 'react-dom';\r\nconst iframe = '<iframe height=\"800\" style=\"width: 100%;\" scrolling=\"yes\" title=\"fx.\" src=\"http://localhost:3000/\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>'; \r\n\r\n\r\nfunction Iframe(props) {\r\n    return (<div dangerouslySetInnerHTML={ {__html:  props.iframe?props.iframe:\"\"}} />);\r\n  }\r\n\r\nfunction SharedComp() {\r\n  return (\r\n    <div className=\"App\">\r\n  \r\n      <Iframe iframe={iframe} />,\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default SharedComp;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass StudyDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            res : this.props.params.split(\"&\"),docaccount : null\r\n        }\r\n\r\n        \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    async handleAdd(){\r\n        const res = await this.props.contract?.methods.addStudy(this.state.res[0],this.state.res[1],this.state.res[2],this.state.res[3],this.state.res[4]).send({from: this.props.accounts[0],gas : 2000000});\r\n        console.log(res);\r\n    }\r\n\r\n    handleClick(){\r\n        \r\n        window.location.replace(`http://localhost:3000/viewer/${this.state.res[4]}`);\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n     \r\n        return (\r\n            <div className=\"container\">\r\n                <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n                <h1>Studies</h1>\r\n                <br/>\r\n                <br/>\r\n                <p>Patient Name : {this.state.res[0]}</p>\r\n                <p>Study Type : {this.state.res[1]}</p>\r\n                <p>Instance Id : {this.state.res[2]}</p>\r\n                <p>Study Date : {this.state.res[3]}</p>\r\n                <br/>\r\n                <br/>\r\n                <Form onSubmit={this.handleAdd}>\r\n\r\n                            <FormGroup row>\r\n                                <Col >\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add Study\r\n                                    </Button>\r\n                                    \r\n                                    \r\n                                </Col>\r\n                                \r\n                            </FormGroup>\r\n\r\n                            \r\n                        </Form>\r\n                        \r\n                       \r\n            \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default StudyDetail;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback ,Card, CardImg,CardImgOverlay, CardTitle, CardBody, CardText, Modal,ModalBody,ModalHeader} from 'reactstrap';\r\nimport { BrowserRouter, NavLink } from 'react-router-dom';\r\n\r\nimport { render } from 'react-dom';\r\nvar mst;\r\nvar alldocs = [];\r\n\r\nfunction handleClick(y){\r\n        \r\n    window.location.replace(`http://localhost:3000/viewer/${y}`);\r\n}\r\n\r\n\r\n    class Allpatrender extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state = { docCount : 0, qty: 0 , dish: [] , isModalOpen: false, isModalOpen1: false,docaccount : null,newid: 0};\r\n         \r\n            this.toggleModal1 = this.toggleModal1.bind(this);\r\n            this.share = this.share.bind(this);\r\n            this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n        } \r\n        share = async () => {\r\n            console.log(this.state.newid);\r\n            const res = await this.props.contract.methods.sendstudy(this.props.dish.study_id,this.state.docaccount).send({from: this.props.accounts[0],gas : 1000000});\r\n            console.log(res);\r\n        }\r\n        toggleModal1() {\r\n            this.setState({\r\n                isModalOpen1: !this.state.isModalOpen1\r\n            });\r\n        }\r\n        handleInputChange(event){\r\n            const target = event.target;\r\n            const value = target.value;\r\n            const name = target.name;\r\n            this.setState({\r\n                [name] : value\r\n            })\r\n            \r\n        }\r\n    \r\n\r\nrender(){\r\n    this.state.newid = this.props.dish.study_id;\r\n    return(\r\n        <Card className=\"bg-primary text-white\">\r\n        <i className=\"fa fa-book fa-5x\"></i>\r\n        <CardBody>\r\n        <CardTitle>Study ID : {this.props.dish.study_id}</CardTitle>\r\n        <CardText><small>Patient Name : {this.props.dish.patname}</small></CardText>\r\n        <CardText><small>Study Type : {this.props.dish.study_ohifid}</small></CardText>\r\n        <CardText><small>Instance ID : {this.props.dish.instance_id}</small></CardText>\r\n        <CardText><small>Study Date : {this.props.dish.studydate}</small></CardText>\r\n        <Button color = \"warning\" onClick={() => handleClick(this.props.dish.url)}>\r\n            Look\r\n        </Button>\r\n        \r\n        <Button className=\"ml-2 visible\" color=\"success\" onClick={this.toggleModal1}>\r\n                    Share\r\n                </Button>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen1}  className=\"modal-md\" style={{marginTop: 150}}>\r\n                    <ModalHeader toggle={this.toggleModal1} className=\"pl-5\">Share to Doctor</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"row m-auto p-5\">\r\n                             <Input type=\"text\" id=\"docaccount\" name=\"docaccount\" placeholder=\"Doctor Account Address\" value={this.state.docaccount} onChange={this.handleInputChange}/>\r\n                             <br/><br/>\r\n                            <Button className=\"ml-2\" color=\"info\" onClick={this.share}>Send</Button>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nclass StudyListComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { docCount : 0, dish: [] }\r\n        //this.com = this.com.bind(this);\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        var res = await this.props.contract?.methods.getshared_doc(this.props.accounts[0]).call();\r\n      //\r\n        console.log(res);\r\n               var c = await res?.length;\r\n                var response= [];\r\n                for(var i=0;i<c;i++){\r\n                    var rex = await this.props.contract?.methods.studies(res[i]).call();\r\n                    response.push(rex);\r\n                }\r\n\r\n                this.setState({ dish : response});\r\n                console.log(response);\r\n         \r\n    }\r\n\r\n     render(){\r\n  \r\n        const Menu = this.state.dish.map((x) => {\r\n            console.log(x);\r\n            return (\r\n                <div key={x} className=\"col-4 col-md-3\">\r\n                    < Allpatrender dish={x} contract = {this.props.contract} accounts={this.props.accounts}/>\r\n                </div>\r\n            );\r\n        })\r\n        if(!this.props.auth){\r\n            return(<React.Fragment></React.Fragment>);\r\n        }\r\n        return(\r\n        <div className=\"container\">\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h2>All Studies</h2>\r\n            <div className=\"row\">\r\n                {Menu}\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default StudyListComponent;","import React, { Component } from \"react\";\r\nimport MedicoContract from \"../contracts/Medico.json\";\r\nimport getWeb3 from \"../getWeb3\";\r\nimport \"../App.css\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport DoctorComp from \"./DoctorComponent\";\r\nimport PatientComp from \"./PatientComponent\";\r\nimport Footer from './FooterComponent';\r\nimport TreatmentComp from \"./TreatmentComponent\";\r\nimport AllDocsComponent from \"./AllDocsComponent\";\r\nimport AllTreatmentComponent from \"./AllTreatment\";\r\nimport GetPatient from \"./getPatientComponent\";\r\nimport SharedComp from \"./SharedComponent\";\r\nimport StudyDetail from \"./SharedStudyComp\";\r\nimport StudyListComponent from \"./StudyListComponent\";\r\n\r\n\r\n//import HDWalletProvider from \"@truffle/hdwallet-provider\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { storageValue: 0, web3: null, accounts: null, contract: null ,res : null,auth:true};\r\n    this.authhandler = this.authhandler.bind(this);\r\n  }\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = MedicoContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        MedicoContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n     \r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      console.log(instance)\r\n      this.setState({ web3, accounts, contract: instance });\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  authhandler = (vt) => {\r\n    this.setState({auth : vt });\r\n  }\r\n\r\n  render() {\r\n    const Homepage = () => {\r\n      return(\r\n        <Home auth={this.state.auth} authhandler={this.authhandler} accounts={this.state.accounts}/>\r\n      )\r\n    }\r\n    const StudyParam = ({match}) =>{\r\n      return(\r\n        <StudyDetail params={match.params.dishId} contract={this.state.contract} accounts={this.state.accounts}/>\r\n        )\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Header contract = {this.state.contract} accounts={this.state.accounts} auth={this.state.auth} />\r\n\r\n        <Switch>\r\n          <Route path='/home' component={Homepage} />\r\n          <Route path='/doctor' component={() => <DoctorComp contract={this.state.contract} accounts={this.state.accounts } auth={this.state.auth}/>} />\r\n          <Route path='/treatment' component={() => <TreatmentComp contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/docs' component={() => <AllDocsComponent contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/patient' component={() => <PatientComp contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>} />\r\n          <Route path='/treat' component={() => <AllTreatmentComponent contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/patdata' component={() => <GetPatient contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/shared' component={() => <StudyListComponent contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/sharedcomp' component={() => <SharedComp contract={this.state.contract} accounts={this.state.accounts} auth={this.state.auth}/>}/>\r\n          <Route path='/studydet/:dishId' component={StudyParam}/>\r\n          <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport Main from './Components/MainComponent';\r\nimport {HashRouter,BrowserRouter} from 'react-router-dom';\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}